doctype html
html(lang = 'en')
  include partial/head.pug
  body.bg-light


    include partial/navbar.pug


    section.container
      header.jumbatron
        img(src = 'img/webgl-operate-logo.svg' alt = 'webgl-operate logo').mb-2.w-50.d-none.d-md-block
        img(src = 'img/webgl-operate-logo.svg' alt = 'webgl-operate logo').mb-2.d-block.d-md-none
        p.lead webgl-operate (or gloperate for WebGL) is a TypeScript based WebGL rendering framework.


    section.container
      div.row
        div.col
          p webgl-operate enables hardware-accelerated 2D and 3D rendering on html canvases. It is use-case agnostic, i.e., it does not assume a specific type of rendering but facilitates arbitrary rendering approaches instead (e.g., procedural rendering, multi-frame sampling, raytracing, progressive pathtracing).

          mixin code(id, source, description)
            p.mb-1.text-secondary= description
            div.btn-clipboard-parent
              div.btn-clipboard-parent 
                button(type = 'button' data-clipboard-target = '#' + id).btn.btn-sm.btn-clipboard.text-muted Copy to Clipboard
                pre.alert.alert-secondary
                  code(id = id)= source

          +code('jsdelivr', '<script src="https://cdn.jsdelivr.net/npm/webgl-operate@0.1.4/dist/webgl-operate.min.js"></script>'
            , 'You can integrate webgl-operate as bundled JavaScript in your HTML:')
          +code('npm', 'npm install --save-dev webgl-operate'
            , 'Or you can use webgl-operate as JavaScript or TypeScript library (types included) via npm:')


    section.container
      div.row
        div.col

          h4 Feature Excerpt 

          ul.features.text-dark
            li #.#.#
            li Cross-browser Compatible
            li Desktop and Mobile
            li Object-oriented WebGL2 Facade
            li Professional Customer Support
            li Professional Integration Service

          ul.features.text-dark
            li 0.1.0
            li.text-info Object-oriented WebGL2 Facade
            li.text-info WebGL Backend
            li.text-dark Extension Querying and Masquerade
            li.text-info Multiple Canvases
            li.text-info Default Rendering Controller

          ul.features.text-muted
            li 0.2.0
            li Programs and Shaders with Includes and Defines
            li GPU Allocation Registry
            li Default Viewer UI/Overlay
            li Multi-frame Rendering Controller

          ul.features.text-muted
            li 0.3.0
            li Dynamic Resolution
            li 2D and 3D Textures
            li Frame Buffers
            li Vertex Buffers
            li Vertex Arrays

          ul.features.text-muted
            li 0.4.0
            li Drawables
            li Observable Rendering Stats
            li Camera and Navigation
            li Adaptive Resolution
            li Post-processing Library
            li LUT Color Grading

          ul.features.text-muted
            li 0.5.0
            li Text Rendering
            li Ray Tracing Controller
            li Progressive Path Tracing Controller


          p.text-right
            small
              | #[span.text-dark  &#x025FC;] &#x02002;implemented &#x02003;
              | #[span.text-info  &#x025FC;] &#x02002;in progress &#x02003;
              | #[span.text-muted &#x025FC;] &#x02002;pending &#x02003;


    section.container
      div.row
        div.col
          h4 Examples

          div.card-columns
            - var examples = ['volume', 'basic quad', 'simson', 'textured box', 'logo', 'treemap', 'path tracing cornell', 'multiframe sponza', 'ray marching meta balls', 'sky triangle', 'terrain', 'text rendering']
            each example, index in examples
              include partial/example.pug


    include partial/foot.pug
